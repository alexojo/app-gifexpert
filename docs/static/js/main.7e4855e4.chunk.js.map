{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEFN,GAAe,SAAAO,GAAI,OAAIL,GAAJ,mBAAkBK,OACrCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAjBc,SAACL,GAEvBF,EAAcE,EAAEM,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAYH,GAFhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA0BtC,OAnBAC,qBAAU,WAGNxB,EAASC,GAEJwB,MAAO,SAAAC,GACJC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAGd,UAGZ,CAACpB,IAGGqB,EDvBwBM,CAAc3B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAGpB,OACI,qCACG,6BAAMpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEb,qBAAKA,UAAU,YAAf,SAEKH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEfvBiB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,cAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAK9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ0C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADHA,Y,MCfnC8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7e4855e4.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        //console.log(e);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault(); //No se realice el tipico renderizado\r\n\r\n        setCategories (cats =>[inputValue,...cats]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            /> \r\n        </form>\r\n    )\r\n}\r\n\r\n//indicar funciones o variables necesarias\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async(category) => {\r\n \r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${encodeURI ( category ) }&limit=10&api_key=5LroUYnyY0NDEcbfa2wbkqbyyrRiOnaK`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return(gifs);\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    \r\n    return (\r\n        <>\r\n           <h3>{ category }</h3> \r\n\r\n            {loading && <p className='animate__animated animate__flash'>Cargando</p>}\r\n\r\n           <div className='card-grid'>\r\n            {\r\n                images.map( img =>(\r\n                    <GifGridItem \r\n                        key = { img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }    \r\n\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        getGifs( category )\r\n        \r\n            .then ( imgs =>{\r\n                setTimeout(() => {\r\n                    \r\n                    setstate({\r\n                        data:imgs,\r\n                        loading: false\r\n                    })\r\n\r\n                }, 3000);\r\n                \r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['barcelona']);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid    \r\n                            key = {category} \r\n                            category={category}      \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}